# Tyk Control Plane Helm Values
# Using chart's built-in secret management for proper GitOps deployment

global:
  # Use external secrets for sensitive data
  secrets:
    useSecretName: "tyk-control-plane-secret"
  
  # Admin user configuration from secrets
  adminUser:
    useSecretName: "tyk-control-plane-secret"
    # These will be overridden by secret values
    firstName: admin
    lastName: user
    email: admin@example.com
    password: ""
  
  # Licenses are referenced from secrets
  license:
    dashboard: ""  # Will be loaded from secret
    operator: ""   # Will be loaded from secret
  
  # Component configuration
  components:
    bootstrap: true
    pump: true
    devPortal: false  # Start minimal, can enable later
    operator: false   # Start minimal, can enable later
  
  # Service ports
  servicePorts:
    dashboard: 3000
    gateway: 8080
  
  # TLS configuration
  tls:
    dashboard: false
    gateway: false
    useDefaultTykCertificate: true
  
  # Storage backend - using PostgreSQL
  storageType: postgres
  
  # PostgreSQL configuration with secret references
  postgres:
    host: ""  # Will be loaded from secret
    port: 5432
    user: ""  # Will be loaded from secret
    password: ""  # Will be loaded from secret
    database: ""  # Will be loaded from secret
    sslmode: require
    # Use secret references for connection details
    connectionStringSecret:
      name: "tyk-infrastructure-secret"
      keyName: "postgresConnectionString"
  
  # Redis configuration with secret references
  redis:
    # Use secret reference for Redis configuration
    addrsSecret:
      name: "tyk-infrastructure-secret"
      keyName: "redisAddr"
    passSecret:
      name: "tyk-infrastructure-secret"
      keyName: "redisPassword"
    useSSL: true
    storage:
      database: 0
  
  # Security settings
  hashKeys: true
  oasValidateExamples: false
  oasValidateSchemaDefaults: false
  
  # Streaming configuration
  streaming:
    enabled: true
  
  # MDCB Synchronizer for Control Plane
  mdcbSynchronizer:
    enabled: false

# Tyk Gateway Configuration
tyk-gateway:
  gateway:
    hostName: "tyk-gw.local"
    
    # Use Dashboard for API configuration
    useDashboardAppConfig:
      enabled: true
      dashboardConnectionString: ""
      policyConnectionString: ""
    
    # TLS configuration
    tls:
      secretName: tyk-default-tls-secret
      insecureSkipVerify: true
      certificatesMountPath: "/etc/certs/tyk-gateway"
      certificates:
        - domain_name: "*"
          cert_file: "/etc/certs/tyk-gateway/tls.crt"
          key_file: "/etc/certs/tyk-gateway/tls.key"
    
    # Deployment configuration
    kind: Deployment
    replicaCount: 1
    
    # Analytics configuration
    analyticsEnabled: true
    
    # Image configuration
    image:
      repository: tykio/tyk-gateway
      tag: v5.8.1
      pullPolicy: IfNotPresent
    
    # Container configuration
    containerPort: 8080
    
    # Service configuration
    service:
      type: ClusterIP
      externalTrafficPolicy: Local
      annotations: {}
    
    # Control port configuration
    control:
      enabled: true
      containerPort: 9696
      port: 9696
      type: ClusterIP
      annotations: {}
    
    # Resource configuration
    resources: {}
    
    # Security context
    securityContext:
      runAsUser: 1000
      fsGroup: 2000
      runAsNonRoot: true
    
    containerSecurityContext:
      runAsNonRoot: true
      runAsUser: 1000
      allowPrivilegeEscalation: false
      privileged: false
      readOnlyRootFilesystem: true
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL
    
    # Node selection
    nodeSelector: {}
    tolerations: []
    affinity: {}
    
    # Gateway-specific settings
    allowInsecureConfigs: true
    globalSessionLifetime: 100
    enableCustomDomains: true
    maxIdleConnectionsPerHost: 500
    enablePathPrefixMatching: true
    enablePathSuffixMatching: true
    enableStrictRoutes: true

# Tyk Dashboard Configuration
tyk-dashboard:
  dashboard:
    # Dashboard-specific configuration
    tykApiHost: ""  # Will be auto-configured
    enableOwnership: true
    defaultPageSize: 10
    notifyOnChange: true
    hashKeys: true
    enableDuplicateSlugs: true
    showOrgId: true
    
    # Host configuration
    hostConfig:
      enableHostNames: true
      disableOrgSlugPrefix: true
      overrideHostname: "tyk-gw.local"
    
    # Dashboard settings
    homeDir: "/opt/tyk-dashboard"
    useShardedAnalytics: true
    enableAggregateLookups: true
    enableAnalyticsCache: true
    allowExplicitPolicyId: true
    oauthRedirectUriSeparator: ";"
    keyRequest
Fields: "appName;appType"
    dashboardSessionLifetime: 43200
    ssoEnableUserLookup: true
    notificationsListenPort: 5000
    enableDeleteKeyByHash: true
    enableUpdateKeyByHash: true
    enableHashedKeysListing: true
    enableMultiOrgUsers: true
    forbidAdminViewAccessToken: true
    forbidAdminResetAccessToken: true
    
    # Deployment configuration
    replicaCount: 1
    
    # Image configuration
    image:
      repository: tykio/tyk-dashboard
      tag: v5.8.1
      pullPolicy: Always
    
    # Service configuration
    service:
      type: ClusterIP
      externalTrafficPolicy: Local
      annotations: {}
    
    # Resource configuration
    resources: {}
    
    # Security context
    securityContext:
      runAsUser: 1000
      fsGroup: 2000
      runAsNonRoot: true
    
    containerSecurityContext:
      runAsNonRoot: true
      runAsUser: 1000
      allowPrivilegeEscalation: false
      privileged: false
      readOnlyRootFilesystem: true
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL
    
    # Node selection
    nodeSelector: {}
    tolerations: []
    affinity: {}
    
    # TLS configuration
    hostName: "tyk-dashboard.local"
    tls:
      secretName: tyk-default-tls-secret
      insecureSkipVerify: true
      certificatesMountPath: "/etc/certs/tyk-dashboard"
      certificates:
        - domain_name: "*"
          cert_file: "/etc/certs/tyk-dashboard/tls.crt"
          key_file: "/etc/certs/tyk-dashboard/tls.key"

# Tyk MDCB Configuration
tyk-mdcb:
  mdcb:
    # Use external secret for MDCB configuration
    useSecretName: "tyk-control-plane-secret"
    
    # MDCB specific settings
    listenPort: 9091
    forwardAnalyticsToPump: true
    enableMultipleAnalyticsKey: true
    dontStoreSelective: false
    dontStoreAggregate: false
    ignoreTagPrefixList: []
    trackAllPaths: false
    storeAnalyticsPerMinute: false
    
    # HTTP server options
    httpServerOptions:
      useSSL: false
    
    # Security settings
    security:
      secret: ""  # Will be loaded from secret
      enableHttpSecureEndpoints: false
    
    # Health check configuration
    httpPort: 8181
    healthcheck:
      cache_renewal_period: 10
    
    # Probes configuration
    probes:
      liveness:
        path: "/liveness"
        initialDelaySeconds: 5
        periodSeconds: 2
        timeoutSeconds: 3
        failureThreshold: 2
      readiness:
        path: "/readiness"
        initialDelaySeconds: 1
        periodSeconds: 10
        timeoutSeconds: 3
        failureThreshold: 3
    
    # Deployment configuration
    replicaCount: 1
    
    # Image configuration
    image:
      repository: tykio/tyk-mdcb-docker
      tag: v2.8.1
      pullPolicy: IfNotPresent
    
    # Service configuration
    service:
      type: ClusterIP
      port: 9091
      externalTrafficPolicy: Local
      annotations: {}
    
    # Resource configuration
    resources: {}
    
    # Security context
    podSecurityContext: {}
    containerSecurityContext: {}
    
    # Node selection
    nodeSelector: {}
    tolerations: []
    affinity: {}
    
    # TLS configuration
    tls:
      useSSL: false
      certificatesMountPath: "/etc/certs"
      certificateKeyFile: "/etc/certs/tls.key"
      certificateCertFile: "/etc/certs/tls.crt"
      secretName: "mdcb-tls-secret"
      volumeName: "mdcb-tls-secret-volume"

# Tyk Pump Configuration
tyk-pump:
  pump:
    # Deployment configuration
    replicaCount: 1
    
    # Image configuration
    image:
      repository: tykio/tyk-pump-docker-pub
      tag: v1.12.0
      pullPolicy: IfNotPresent
    
    # Service configuration
    service:
      enabled: false
      type: ClusterIP
      port: 9090
      externalTrafficPolicy: Local
      annotations: {}
    
    # Health check service
    healthCheckService:
      enabled: false
      type: ClusterIP
      path: "hello"
      port: 8083
      portName: ""
      externalTrafficPolicy: Local
      annotations: {}
    
    # Container configuration
    containerPort: 9090
    omitConfigFile: true
    purgeDelay: 2
    maxIdleConnections: 2000
    maxActiveConnections: 4000
    
    # Backend configuration
    backend:
      - "prometheus"
      - "postgres"
    
    # Uptime pump backend
    uptimePumpBackend: ""
    
    # Prometheus pump configuration
    prometheusPump:
      host: ""
      path: /metrics
      customMetrics: ""
      prometheusOperator:
        enabled: false
        podMonitorSelector:
          release: prometheus-stack
    
    # SQL Graph pump configuration
    sqlGraphPump:
      tableName: "tyk_analytics_graphs"
    
    # Mongo Graph pump configuration
    mongoGraphPump:
      collectionName: "tyk_graph_analytics"
    
    # Resource configuration
    resources: {}
    
    # Security context
    securityContext:
      runAsUser: 1000
      fsGroup: 2000
      runAsNonRoot: true
    
    containerSecurityContext:
      runAsNonRoot: true
      runAsUser: 1000
      allowPrivilegeEscalation: false
      privileged: false
      readOnlyRootFilesystem: true
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL
    
    # Node selection
    nodeSelector: {}
    tolerations: []
    affinity: {}

# Tyk Bootstrap Configuration
tyk-bootstrap:
  bootstrap:
    # Bootstrap triggers
    devPortal: false
    dashboard: true
    portal: false
    sslInsecureSkipVerify: true
    operatorSecret: tyk-operator-conf
    
    # Bootstrap jobs configuration
    jobs:
      preInstall:
        image:
          repository: tykio/tyk-k8s-bootstrap-pre-install
          tag: v2.2.0
        extraEnvs: []
      
      postInstall:
        image:
          repository: tykio/tyk-k8s-bootstrap-post
          tag: v2.2.0
        extraEnvs: []
      
      preDelete:
        image:
          repository: tykio/tyk-k8s-bootstrap-pre-delete
          tag: v2.2.0
        extraEnvs: []
    
    # Organization configuration
    org:
      name: "Default Org"
      cname: "tyk-portal.local"
      hybrid:
        enabled: true
    
    # Pod annotations
    podAnnotations:
      preInstallPodAnnotations: {}
      postInstallPodAnnotations: {}
      preDeletePodAnnotations: {}
    
    # Pod labels
    podLabels:
      preInstallPodLabels: {}
      postInstallPodLabels: {}
      preDeletePodLabels: {}
    
    # Node selection
    nodeSelector: {}
    tolerations: {}
    affinity: {}
    
    # Security context
    containerSecurityContext:
      runAsNonRoot: true
      runAsUser: 1000
      fsGroup: 1000
      allowPrivilegeEscalation: false
      privileged: false
      readOnlyRootFilesystem: true
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL